services:
  ollama:
    image: ollama/ollama:latest
    ports:
      - 11434:11434
    volumes:
      - ollama:/root/.ollama
      - ./models.txt:/models.txt
    container_name: ollama
    tty: true
    restart: unless-stopped
    entrypoint: >
      sh -c "
      ollama serve & 
      while ! ollama list > /dev/null 2>&1; do
        echo 'Waiting for Ollama to start...';
        sleep 5;
      done;
      echo 'Reading models from models.txt:';
      cat /models.txt;
      echo;
      echo '------------------------------';
      echo 'Processing models (excluding comments and empty lines):';
      grep -v '^#' /models.txt | grep -v '^$$' > /tmp/filtered_models.txt;
      cat /tmp/filtered_models.txt;
      echo;
      echo '------------------------------';
      while IFS= read -r line; do
        # Trim whitespace and carriage returns
        model=$$(echo \"$$line\" | tr -d '\\r' | xargs);
        [ -z \"$$model\" ] && continue;
        echo \"Pulling model: '$$model'\";
        ollama pull $$model;
      done < /tmp/filtered_models.txt &&
      tail -f /dev/null"
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    depends_on:
      ollama:
        condition: service_healthy
    ports:
      - 3000:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
      - 'WEBUI_AUTH=False'       # Disables login requirements
      - 'WEBUI_ADMIN_MODE=True'  # Enables admin-level permissions by default
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped

volumes:
  ollama: {}
  open-webui: {}